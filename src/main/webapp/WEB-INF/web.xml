<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <display-name>Archetype Created Web Application</display-name>
  <context-param>
    <param-name>javax.faces.CONFIG_FILES</param-name>
    <param-value>/WEB-INF/tomcat-users.xml</param-value>
  </context-param>
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.xhtml</url-pattern>
  </servlet-mapping>


  <security-role>
    <role-name>admin</role-name>
  </security-role>

  <!-- Definiujemy ograniczenie bezpieczeństwa.
       Chcemy, aby do stron w podfolderze /admin/ dostęp miał tylko admin.
       Czemu robić to z poziomu kontenera? -->
  <security-constraint>

    <display-name>Security constraint for the /admin section</display-name>

    <web-resource-collection>

      <web-resource-name>Protected Area</web-resource-name>
      <url-pattern>/newspaper/admin/*</url-pattern>

      <!-- Opcjonalnie można zastrzec ograniczenia dostępu tylko dla niektórych metod. -->
      <!-- Jeśli nic tutaj nie wpiszemy - zastrzegamy do wszystkich. -->
      <!--
      <http-method>DELETE</http-method>
      <http-method>GET</http-method>
      <http-method>POST</http-method>
      <http-method>PUT</http-method>
      -->
    </web-resource-collection>

    <auth-constraint>
      <!-- W tym miejscu definiujemy, że tylko admin może wejść w ten rejon. -->
      <role-name>admin</role-name>
    </auth-constraint>

  </security-constraint>

  <session-config>
    <session-timeout>1</session-timeout>
  </session-config>
  <!-- FORM based authentication -->
  <!-- Jest zakomentowane, bo używamy BASIC (HTTP) authentication -->
  <login-config>
          <auth-method>FORM</auth-method>
          <form-login-config>
                  <form-login-page>/view/LoginPage.jsp</form-login-page>
                  <form-error-page>/view/error/error401.jsp</form-error-page>
          </form-login-config>
  </login-config>
<!--
  <login-config>
    <auth-method>BASIC</auth-method>
  </login-config>
-->

  <security-constraint>

    <web-resource-collection>
      <web-resource-name>Entire Application</web-resource-name>
      <url-pattern>/*</url-pattern>
    </web-resource-collection>

    <user-data-constraint>
      <transport-guarantee>CONFIDENTIAL</transport-guarantee>
    </user-data-constraint>

  </security-constraint>

              <!--ERROR-->
  <error-page>
    <error-code>404</error-code>
    <location>/view/error/error404.jsp</location>
  </error-page>

  <error-page>
    <error-code>401</error-code>
    <location>/view/error/error401.jsp</location>
  </error-page>

</web-app>
